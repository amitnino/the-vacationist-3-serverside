{"version":3,"sources":["reducers/actionNames.js","reducers/authReducer.js","reducers/vacationsReducer.js","reducers/alertReducer.js","reducers/searchReducer.js","reducers/configStore.js","comps/auth/Login.jsx","comps/auth/Register.jsx","comps/auth/Auth.jsx","comps/vacations/VacationCard.jsx","comps/vacations/VacationForm.jsx","comps/vacations/VacationsList.jsx","comps/vacations/VacationsChart.jsx","comps/navigate/MainPageAppBar.jsx","comps/navigate/Alerts.jsx","App.js","index.js"],"names":["LOGIN","LOGOUT","SET_VACATIONS_LIST","SET_ALERT","CLOSE_ALERT","SEARCH","initUser","isLoggedIn","id","name","role","token","authReducer","state","action","type","newState","payload","fname","lname","fetch","method","headers","body","JSON","stringify","initVacations","vacationsReducer","alertInit","isOpen","severity","msg","alertReducer","searchReducer","console","log","persistConfig","key","storage","reducers","persistReducer","store","createStore","combineReducers","persistor","persistStore","useStyles","makeStyles","loginCon","minHeight","Login","history","useHistory","dispatch","useDispatch","classes","useState","username","setUsername","password","setPassword","handleSubmit","a","res","json","data","err","split","decodeToken","accessToken","first_name","last_name","push","Grid","container","spacing","direction","justify","alignItems","alignContent","wrap","FormControl","component","className","FormLabel","item","xs","TextField","label","value","onChange","e","target","Button","variant","color","onClick","Register","handleChange","firstName","setFirstName","lastName","setLastName","event","md","TabPanel","props","children","index","hidden","Box","p","authCon","height","authBox","boxShadow","backgroundColor","Auth","setValue","newValue","sm","AppBar","position","Tabs","aria-label","Tab","theme","root","minWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","VacationCard","info","handleEditOpen","user","useSelector","title","description","price","picture","start","start_date","end","end_date","expanded","setExpanded","isFollowed","setIsFollowed","useEffect","likes","find","v","vac_id","handleFollow","vacations","handleDelete","Card","elevation","CardHeader","subheader","length","CardMedia","image","CardContent","Typography","align","CardActions","disableSpacing","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","moment","format","VacationForm","handleEditClose","setTitle","setDescription","setPrice","setPicture","Date","now","setStart","setEnd","handleEditSubmit","handleAddSubmit","utils","MomentUtils","DialogContent","fullWidth","margin","multiline","disableToolbar","date","KeyboardButtonProps","DialogActions","VacationsList","openEdit","setOpenEdit","undefined","vacationInfo","setVacationInfo","fetchLink","Authorization","style","width","lg","fontSize","map","Dialog","open","onClose","maxWidth","VacationsChart","chartData","setChartData","chart","newArr","followed","borderRadius","horizontal","domainPadding","VictoryTheme","material","x","y","size","colorRoot","appBarCon","paddingLeft","MainPageAppBar","handleLogout","Toolbar","noWrap","InputBase","placeholder","inputProps","Alert","Alerts","alert","Snackbar","autoHideDuration","appCon","backgroundCon","zIndex","backgroundImage","backgroundSize","backgroundPosition","opacity","App","to","path","exact","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e9f31200.chunk.js","sourcesContent":["// AUTH\r\nexport const LOGIN = 'login'\r\nexport const LOGOUT = 'logout'\r\n// VACATIONS\r\nexport const SET_VACATIONS_LIST = 'setvacationslist'\r\n// ALERT\r\nexport const SET_ALERT = 'setalert'\r\nexport const CLOSE_ALERT = 'closealert'\r\n// SEARCH\r\nexport const SEARCH = 'search'","import {LOGIN, LOGOUT} from './actionNames'\r\n\r\nconst initUser = {\r\n    isLoggedIn: false,\r\n    id: null,\r\n    name: null,\r\n    role: null,\r\n    token: null\r\n}\r\n\r\nconst authReducer = (state = initUser, action)=>{\r\n    switch (action.type){\r\n        case LOGIN:\r\n            const newState = {\r\n                isLoggedIn: true,\r\n                token: action.payload.token,\r\n                role: action.payload.role,\r\n                id: action.payload.id,\r\n                fname: action.payload.fname,\r\n                lname: action.payload.lname\r\n            }\r\n            return newState\r\n        case LOGOUT:\r\n            fetch('http://localhost:1000/auth/logout',{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    token:state.token\r\n                })\r\n            })\r\n            return initUser\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import {SET_VACATIONS_LIST} from './actionNames'\r\n\r\nconst initVacations = []\r\n\r\nconst vacationsReducer = (state = initVacations, action) =>{\r\n    switch(action.type){\r\n        case SET_VACATIONS_LIST:\r\n            const newState = action.payload\r\n            return newState\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default vacationsReducer","import { CLOSE_ALERT, SET_ALERT } from \"./actionNames\"\r\n\r\nconst alertInit = {\r\n    isOpen: false,\r\n    severity : 'info',\r\n    msg : 'msg'\r\n}\r\n\r\nconst alertReducer = (state = alertInit, action)=>{\r\n    switch(action.type){\r\n        case SET_ALERT:\r\n            const newState = {\r\n                isOpen: true,\r\n                severity: action.payload.severity,\r\n                msg: action.payload.msg\r\n            }\r\n            return newState\r\n        case CLOSE_ALERT:\r\n            return alertInit\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default alertReducer","import { SEARCH } from \"./actionNames\"\r\n\r\nconst searchReducer = (state = '', action)=>{\r\n    switch (action.type){\r\n        case SEARCH:\r\n            const newState = action.payload\r\n            console.log(newState);\r\n        return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default searchReducer","import { combineReducers, createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport authReducer from './authReducer';\r\nimport vacationsReducer from './vacationsReducer';\r\nimport alertReducer from './alertReducer';\r\nimport searchReducer from './searchReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst reducers = {\r\n    authReducer: persistReducer(persistConfig, authReducer),\r\n    vacationsReducer,\r\n    alertReducer,\r\n    searchReducer\r\n}\r\n\r\nexport const store = createStore(combineReducers(reducers))\r\nexport const persistor = persistStore(store)","import React, { useState } from 'react'\r\nimport { Grid, makeStyles, TextField, FormControl, FormLabel } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { LOGIN, SET_ALERT } from '../../reducers/actionNames'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    loginCon: {\r\n        minHeight: '350px',\r\n    }\r\n})\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = async () => {\r\n        const res = await fetch('http://localhost:1000/auth/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            })\r\n        })\r\n        const data = await res.json()\r\n        if (data.err) return dispatch({ type: SET_ALERT, payload: { severity: 'error', msg: data.msg.split(']')[1] } })\r\n        const { role, id, first_name, last_name } = await decodeToken(data.accessToken)\r\n        await dispatch({\r\n            type: LOGIN, payload: {\r\n                token: data.accessToken,\r\n                fname: first_name,\r\n                lname: last_name,\r\n                role,\r\n                id\r\n            }\r\n        })\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                <FormControl component={Grid}>\r\n                    <Grid\r\n                        className={classes.loginCon}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        wrap=\"wrap\"\r\n                    >\r\n                        <FormLabel component=\"legend\">Enter Username & Password</FormLabel>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                id=\"1\"\r\n                                label=\"USERNAME\"\r\n                                value={username}\r\n                                onChange={e => setUsername(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"2\"\r\n                                label=\"PASSWORD\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                type='password'\r\n                            />\r\n                        </Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n                            <PowerIcon />\r\n                            Login\r\n                        </Button>\r\n                    </Grid>\r\n                </FormControl>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { Grid, FormControl, TextField, makeStyles, Button, FormLabel } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { SET_ALERT } from '../../reducers/actionNames';\r\nimport { useDispatch } from 'react-redux';\r\nconst useStyles = makeStyles({\r\n    loginCon: {\r\n        minHeight: '350px',\r\n    }\r\n})\r\n\r\nconst Register = ({handleChange}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n\r\n    const handleSubmit = async (event) => {\r\n        const res = await fetch('http://localhost:1000/auth/register', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n                firstName,\r\n                lastName\r\n            })\r\n        })\r\n        const data = await res.json()\r\n        const msg = data.msg.split(']')[1]\r\n        if (data.err) return dispatch({ type: SET_ALERT, payload: { severity: 'error', msg: msg } })\r\n        dispatch({ type: SET_ALERT, payload: { severity: 'success', msg: msg } })\r\n        setUsername('')\r\n        setPassword('')\r\n        setFirstName('')\r\n        setLastName('')\r\n        handleChange(event, 0)\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                wrap=\"nowrap\"\r\n\r\n            >\r\n                <FormControl>\r\n                    <Grid\r\n                        className={classes.loginCon}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                        alignContent=\"center\"\r\n                        wrap=\"wrap\"\r\n                    >\r\n                        <FormLabel component=\"legend\">Please enter the following information to register</FormLabel>\r\n                        <Grid\r\n                            container\r\n                            spacing={3}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            alignContent=\"center\"\r\n                            wrap=\"wrap\"\r\n                        >\r\n                            <Grid item xs={12} md={6} >\r\n                                <TextField\r\n                                    id=\"1\"\r\n                                    label=\"First Name\"\r\n                                    value={firstName}\r\n                                    onChange={e => setFirstName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6} >\r\n                                <TextField\r\n                                    id=\"2\"\r\n                                    label=\"Last Name\"\r\n                                    value={lastName}\r\n                                    onChange={e => setLastName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            spacing={3}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            alignContent=\"center\"\r\n                            wrap=\"wrap\"\r\n                        >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    id=\"3\"\r\n                                    label=\"Username\"\r\n                                    value={username}\r\n                                    onChange={e => setUsername(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id=\"4\"\r\n                                    label=\"Password\"\r\n                                    value={password}\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                    type='password'\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={e=>handleSubmit(e.target)}>\r\n                            <CheckIcon />\r\n                          Register\r\n                        </Button>\r\n                    </Grid>\r\n                </FormControl>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel${index}`}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <>\r\n            {children}\r\n          </>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  authCon: {\r\n    height: '100%',\r\n  },\r\n  authBox: {\r\n    boxShadow: '15px',\r\n    backgroundColor:'rgba(255,255,255,0.8)',\r\n\r\n  }\r\n})\r\n\r\nconst Auth = () => {\r\n\r\n  const [value, setValue] = useState(0)\r\n\r\n  const classes = useStyles()\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component={Grid}\r\n      className={classes.authCon}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n\r\n    >\r\n      <Box item sm={12} md={4} className={classes.authBox} component={Grid} boxShadow={7}>\r\n        <AppBar position=\"static\">\r\n          <Tabs value={value} onChange={handleChange} aria-label=\"\">\r\n            <Tab label=\"Login\" />\r\n            <Tab label=\"Register\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <Login />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Register handleChange={handleChange} />\r\n        </TabPanel>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Typography, makeStyles, Card, CardHeader, CardMedia, CardActions, IconButton, Collapse, CardContent } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport clsx from 'clsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { LOGOUT, SET_ALERT, SET_VACATIONS_LIST } from './../../reducers/actionNames';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 350,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    }\r\n}));\r\n\r\nconst VacationCard = ({ info, handleEditOpen }) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.authReducer)\r\n    const classes = useStyles();\r\n\r\n    const { title, description, price, picture, id } = info\r\n    const start = info.start_date\r\n    const end = info.end_date\r\n    \r\n    const [expanded, setExpanded] = useState(false)\r\n    const [isFollowed, setIsFollowed] = useState(false)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await fetch(`http://localhost:1000/vacations/likes`, {\r\n                headers: { 'Authorization': user.token }\r\n            })\r\n            const data = await res.json()\r\n            if (data.err) return console.log(data.type,data.msg)\r\n            const like = await data.likes.find(v => v.vac_id === id)\r\n            if (like) setIsFollowed(true)\r\n        })()\r\n    })\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleFollow = async () => {\r\n        const res = await fetch(`http://localhost:1000/vacations/likes/${isFollowed ? 'remove' : 'add'}/` + id, {\r\n            headers: { 'Authorization': user.token }\r\n        })\r\n        const data = await res.json()\r\n        if (data.err) { data.type === 'token' && dispatch({type: LOGOUT})}\r\n        setIsFollowed(!isFollowed)\r\n        dispatch({type:SET_VACATIONS_LIST, payload: data.vacations})\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        const res = await fetch(`http://localhost:1000/vacations/` + id, {\r\n            method: 'DELETE',\r\n            headers: { 'Authorization': user.token }\r\n        })\r\n        const data = await res.json()\r\n        const msg = data.msg.split(']')[1]\r\n        if (data.err){\r\n            dispatch({type:SET_ALERT, payload:{severity:'error', msg:msg}})\r\n            dispatch({type:LOGOUT})\r\n            history.push('/')\r\n            return\r\n        }\r\n        dispatch({type:SET_ALERT, payload:{severity:'success', msg:msg}})\r\n        dispatch({type:SET_VACATIONS_LIST, payload: data.vacations})\r\n        return\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root} elevation={15}>\r\n                <CardHeader\r\n                    title={title}\r\n                    subheader={`From ${start.length > 19 ? start.split('T')[0] : start} To ${end.length > 19 ? end.split('T')[0] : end}`}\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={picture}\r\n                    title=\"location pic\"\r\n                />\r\n                <CardContent>\r\n                    <Typography align='center' variant=\"h5\" color=\"inherit\" component=\"p\">{price}$</Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    {user.role === 'user' ?\r\n                        <IconButton aria-label=\"follow\" color={isFollowed ? 'primary' : 'default'} onClick={handleFollow}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        :\r\n                        <IconButton aria-label=\"edit vacation info\" color='primary' onClick={() => handleEditOpen(info)} >\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    }\r\n                    {user.role === 'admin' &&\r\n                        <IconButton aria-label=\"edit vacation info\" color='secondary' onClick={() => handleDelete(info.id)} >\r\n                            <DeleteForeverIcon />\r\n                        </IconButton>\r\n\r\n                    }\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <Typography paragraph>{description}</Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacationCard\r\n","import React, { useState } from 'react'\r\nimport { TextField, DialogContent, DialogActions, Button } from '@material-ui/core';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOGOUT, SET_ALERT, SET_VACATIONS_LIST } from './../../reducers/actionNames';\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nmoment().format()\r\n\r\n\r\nconst VacationForm = ({ info, handleEditClose }) => {\r\n\r\n    const user = useSelector(state => state.authReducer)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const id = info && info.id\r\n\r\n    const [title, setTitle] = useState(!info ? '' : info.title)\r\n    const [description, setDescription] = useState(!info ? '' : info.description)\r\n    const [price, setPrice] = useState(!info ? '' : info.price)\r\n    const [picture, setPicture] = useState(!info ? '' : info.picture)\r\n    const [start, setStart] = useState(!info ? Date.now() : moment(info.start_date))\r\n    const [end, setEnd] = useState(!info ? Date.now() + 1000 * 60 * 60 * 24 * 7 : moment(info.end_date))\r\n\r\n    const handleEditSubmit = async () => {\r\n        const res = await fetch('http://localhost:1000/vacations/edit', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': user.token },\r\n            body: JSON.stringify({\r\n                id,\r\n                title,\r\n                description,\r\n                price,\r\n                picture,\r\n                start_date: start,\r\n                end_date: end\r\n            })\r\n        })\r\n        const data = await res.json()\r\n        if (data.err) return console.log(data.type, data.msg)\r\n        console.log(data.msg)\r\n        dispatch({ type: SET_VACATIONS_LIST, payload: data.vacations })\r\n        handleEditClose()\r\n    }\r\n\r\n    const handleAddSubmit = async () => {\r\n        const res = await fetch('http://localhost:1000/vacations/add', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': user.token },\r\n            body: JSON.stringify({\r\n                title,\r\n                description,\r\n                price,\r\n                picture,\r\n                start_date: start,\r\n                end_date: end\r\n            })\r\n        })\r\n        const data = await res.json()\r\n        const msg = data.msg.split(']')[1]\r\n        if (data.err){\r\n            dispatch({type:SET_ALERT, payload:{severity:'error', msg:msg}})\r\n            dispatch({type:LOGOUT})\r\n            history.push('/')\r\n            return\r\n        }\r\n        dispatch({type:SET_ALERT, payload:{severity:'success', msg:msg}})\r\n        dispatch({type:SET_VACATIONS_LIST, payload: data.vacations})\r\n        handleEditClose()\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"title\"\r\n                        label=\"Title\"\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        multiline\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        type='number'\r\n                        id=\"price\"\r\n                        label=\"Price -- $\"\r\n                        value={price}\r\n                        onChange={e => setPrice(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        id=\"picture\"\r\n                        label=\"Picture\"\r\n                        value={picture}\r\n                        onChange={e => setPicture(e.target.value)}\r\n                    />\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        fullWidth\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-start\"\r\n                        label=\"Starting Date\"\r\n                        value={start}\r\n                        onChange={date => setStart(moment(date).format('DD/MM/yyyy'))}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"inline\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        id=\"date-picker-end\"\r\n                        label=\"End Date\"\r\n                        value={end}\r\n                        onChange={date => setEnd(moment(date).format('DD/MM/yyyy'))}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleEditClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    {\r\n                        id ?\r\n                            <Button onClick={handleEditSubmit} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                            :\r\n                            <Button onClick={handleAddSubmit} color=\"primary\">\r\n                                Add\r\n                            </Button>\r\n                    }\r\n                </DialogActions>\r\n            </MuiPickersUtilsProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacationForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOGOUT, SET_ALERT, SET_VACATIONS_LIST } from '../../reducers/actionNames';\r\nimport { useHistory } from 'react-router-dom';\r\nimport VacationCard from './VacationCard';\r\nimport { Grid, Box, Dialog, IconButton } from '@material-ui/core'\r\nimport VacationForm from './VacationForm';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\n\r\nconst VacationsList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const searchReducer = useSelector(state => state.searchReducer)\r\n    const user = useSelector(state => state.authReducer)\r\n    const vacations = useSelector(state => state.vacationsReducer)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [vacationInfo, setVacationInfo] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const fetchLink = searchReducer ? 'http://localhost:1000/vacations/search/' + searchReducer : 'http://localhost:1000/vacations'\r\n            const res = await fetch(fetchLink, {\r\n                headers: { Authorization: user.token }\r\n            })\r\n            const data = await res.json()\r\n            if (data.err) {\r\n                const msg = data.msg.split(']')[1]\r\n                dispatch({ type: LOGOUT })\r\n                dispatch({ type: SET_ALERT, payload: { severity: 'error', msg: msg } })\r\n                history.push('/')\r\n                return\r\n            }\r\n            dispatch({ type: SET_VACATIONS_LIST, payload: [...data.vacations] })\r\n        })()\r\n    }, [searchReducer])\r\n\r\n    const handleEditOpen = (info) => {\r\n        setOpenEdit(true)\r\n        info ? setVacationInfo(info) : setVacationInfo(undefined)\r\n    }\r\n\r\n    const handleEditClose = () => {\r\n        setOpenEdit(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component={Grid}\r\n                container\r\n                style={{ width: '100%' }}\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-start\"\r\n                wrap=\"wrap\"\r\n            >\r\n                {user.role === 'admin' &&\r\n                    <Grid item sm={12} md={2} lg={1} container\r\n                        style={{ height: '500px' }}\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\" >\r\n                        <IconButton aria-label=\"add new vacation\" onClick={handleEditOpen}>\r\n                            <AddCircleRoundedIcon style={{ fontSize: 100, color: 'white' }} />\r\n                        </IconButton>\r\n                    </Grid>}\r\n                {vacations.map(v => {\r\n                    return (\r\n                        <Grid key={v.id + 'grid-item'} item xs={12} sm={8} md={6} lg={3} container\r\n                            direction=\"row\"\r\n                            justify=\"space-evenly\"\r\n                            alignItems=\"flex-start\">\r\n                            <VacationCard key={v.id} info={v} handleEditOpen={handleEditOpen} />\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n                <Dialog\r\n                    open={openEdit}\r\n                    onClose={handleEditClose}\r\n                    maxWidth='md'\r\n                >\r\n                    <VacationForm info={vacationInfo} handleEditClose={handleEditClose} />\r\n                </Dialog>\r\n            </Box>\r\n            <Box style={{ height: '70px' }} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacationsList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOGOUT, SET_ALERT } from '../../reducers/actionNames';\r\nimport { VictoryBar, VictoryChart, VictoryTheme } from 'victory';\r\n\r\nconst VacationsChart = () => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.authReducer)\r\n    const [chartData, setChartData] = useState(undefined)\r\n\r\n    const handleHomeBtn = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await fetch('http://localhost:1000/vacations/chart', {\r\n                headers: { 'Authorization': user.token }\r\n            })\r\n            const data = await res.json()\r\n            if (data.err) {\r\n                const msg = data.msg.split(']')[1]\r\n                dispatch({ type: SET_ALERT, payload: { severity: 'error', msg: msg } })\r\n                dispatch({ type: LOGOUT })\r\n                history.push('/')\r\n                return\r\n            }\r\n            if (!data.chart.length) {\r\n\r\n                return\r\n            }\r\n            const newArr = data.chart.map(v => { return { 'name': v.title, 'follows': v.followed } })\r\n            setChartData(newArr)\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                <Box\r\n                    style={{\r\n                        height: '700px',\r\n                        width: '70%',\r\n                        boxShadow: '0 3px 8px 5px rgba(0, 0, 0, .2)',\r\n                        backgroundColor: 'rgba(255,255,255,0.9)',\r\n                        borderRadius: '3%'\r\n                    }}\r\n                >\r\n                    {chartData ?\r\n                        <VictoryChart\r\n                            horizontal\r\n                            domainPadding={20}\r\n                            theme={VictoryTheme.material}\r\n                        >\r\n                            <VictoryBar\r\n                                data={chartData}\r\n                                x='name'\r\n                                y='follows'\r\n                            />\r\n                        </VictoryChart>\r\n                        :\r\n                        <Typography variant=\"h4\" align='center' color=\"initial\">Sorry... none of the vacations is followed</Typography>\r\n                    }\r\n                </Box>\r\n                <Box style={{ height: '50px' }} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{ fontSize: '30px' }}\r\n                    color=\"primary\"\r\n                    size='large'\r\n                    onClick={handleHomeBtn}\r\n                >\r\n                    <HomeIcon color='inherit' style={{ fontSize: '30px' }} />\r\n                    Home\r\n            </Button>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VacationsChart\r\n","import React from 'react'\r\nimport { Grid, Toolbar, Button, Typography, AppBar, InputBase, makeStyles, Box } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOGOUT, SEARCH } from '../../reducers/actionNames';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    colorRoot: {\r\n        color: 'white',\r\n    },\r\n    appBarCon: {\r\n        paddingLeft: '20px'\r\n    }\r\n})\r\n\r\nfunction MainPageAppBar() {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const user = useSelector(state => state.authReducer)\r\n\r\n    const handleLogout = async () => {\r\n        await fetch('http://localhost:1000/auth/logout', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                token: user.accessToken\r\n            })\r\n        })\r\n        dispatch({ type: LOGOUT })\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const handleCharts = () => {\r\n        history.push('/chart')\r\n    }\r\n\r\n    const handleSearch = (value) => {\r\n        dispatch({ type: SEARCH, payload: value })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Grid\r\n                        container\r\n                        spacing={1}\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"center\"\r\n                        wrap=\"wrap\"\r\n                        className={classes.appBarCon}\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={3}\r\n                            container\r\n                            spacing={4}\r\n                            direction=\"row\"\r\n                            justify=\"space-evenly\"\r\n                            alignItems=\"center\"\r\n                            wrap=\"nowrap\"\r\n\r\n                        >\r\n                            <Grid item >\r\n                                <Button\r\n                                    classes={{\r\n                                        root: classes.colorRoot,\r\n                                    }}\r\n                                    onClick={handleLogout}\r\n                                >\r\n                                    <ExitToAppIcon />\r\n                                Logout\r\n                            </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\" noWrap>\r\n                                    Welcome Mr. {user.lname}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                {user.role === 'admin' &&\r\n                                    <Button\r\n                                        onClick={handleCharts}\r\n                                        variant=\"text\"\r\n                                        classes={{\r\n                                            root: classes.colorRoot,\r\n                                        }}\r\n                                    >\r\n                                        Charts\r\n                                    </Button>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                            <Typography\r\n                            style={{ margin: '5px 0px 5px 0px' }}\r\n                            variant=\"h4\"\r\n                            color=\"initial\"\r\n                            align='center'\r\n                            >\r\n                            The Vacationist\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={3}\r\n                            container\r\n                            spacing={1}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            alignContent=\"center\"\r\n                            wrap=\"nowrap\"\r\n\r\n                        >\r\n                            <Grid item>\r\n                                <SearchIcon />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <InputBase\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.colorRoot,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                    onChange={e => handleSearch(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n                <Box style={{height:'110px'}}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPageAppBar\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CLOSE_ALERT } from '../../reducers/actionNames';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Alerts() {\r\n\r\n    const dispatch = useDispatch()\r\n    const alert = useSelector(state => state.alertReducer)\r\n\r\n    return (\r\n        <Snackbar open={alert.isOpen} autoHideDuration={6000} onClose={()=>dispatch({type:CLOSE_ALERT})}>\r\n            <Alert onClose={()=>dispatch({type:CLOSE_ALERT})} severity={alert.severity}>\r\n                {alert.msg}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import './App.css';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Auth from './comps/auth/Auth';\nimport VacationsList from './comps/vacations/VacationsList';\nimport VacationsChart from './comps/vacations/VacationsChart';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, Box } from '@material-ui/core';\nimport MainPageAppBar from './comps/navigate/MainPageAppBar';\nimport Alerts from './comps/navigate/Alerts';\n\nconst useStyles = makeStyles({\n  appCon:{\n    height:'100vh',\n    width:'99vw'\n  },\n  backgroundCon:{\n    zIndex:'-9999',\n    position: 'fixed',\n    height:'100vh',\n    width:'99vw',\n    backgroundImage:`url(\"/pics/IMG_2057.jpg\")`,\n    backgroundSize:'cover',\n    backgroundPosition:'center',\n    opacity:'0.8'\n    }\n})\n\nfunction App() {\n  const user = useSelector(state => state.authReducer)\n  const classes = useStyles()\n\n  return (\n    <div className={classes.appCon}>\n      <Router>\n          <Box className={classes.backgroundCon}/>\n        { !user.isLoggedIn ? <Redirect to='/auth'/> : <MainPageAppBar /> }\n        <Alerts />\n         <Route path='/auth' component={Auth} />\n         <Route path='/chart' >\n           { !user.isLoggedIn ? <Redirect to='/auth'/> : <VacationsChart /> }\n           </Route>\n         <Route path='/' exact>\n           { !user.isLoggedIn ? <Redirect to='/auth'/> : <VacationsList /> }\n           </Route> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './reducers/configStore'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor} >\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}